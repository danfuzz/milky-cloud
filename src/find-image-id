#!/bin/bash
#
# Copyright 2022 Dan Bornstein.
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

# Set `progName` to the program name, `progDir` to its directory, and `baseDir`
# to `progDir`'s directory. Follows symlinks.
function init-prog {
    local newp p="$0"

    while newp="$(readlink "$p")"; do
        [[ ${newp} =~ ^/ ]] && p="${newp}" || p="$(dirname "$p")/${newp}"
    done

    progName="${p##*/}"
    progDir="$(cd "$(dirname "$p")"; /bin/pwd -P)"
    baseDir="$(cd "${progDir}/.."; /bin/pwd -P)"
}
init-prog


#
# Argument parsing
#

# Error during argument processing?
argError=0

# Need help?
showHelp=0

# Instance type.
instanceType=''

# Location (availability zone).
inLocation=''

while true; do
    case $1 in
        -h|--help)
            showHelp=1
            break
            ;;
        --in=?*)
            inLocation="${1#*=}"
            ;;
        --instance-type=?*)
            instanceType="${1#*=}"
            ;;
        --) # End of all options
            shift
            break
            ;;
        -?*)
            echo 1>&2 "Unknown option: $1"
            argError=1
            break
            ;;
        *)  # Default case: No more options, break out of the loop.
            break
    esac

    shift
done

if (( !${argError} )); then
    if [[ ${inLocation} == '' ]]; then
        echo 1>&2 'Missing option: --in'
        argError=1
    fi

    if [[ ${instanceType} == '' ]]; then
        echo 1>&2 'Missing option: --instance-type'
        argError=1
    fi
fi

if (( ${showHelp} || ${argError} )); then
    echo 'Usage:'
    echo ''
    echo "${progName} [<opt> ...]"
    echo '  Finds an image ID to use when launching an instance.'
    echo ''
    echo '  --in=<availability-zone>'
    echo '    Where to launch. Must be specified.'
    echo '  --instance-type=<type>'
    echo '    What type of instance to install. Must be specified.'
    echo ''
    echo "${progName} [--help | -h]"
    echo '  Displays this message.'
    exit ${argError}
fi


#
# Main script
#

"${progDir}/aws-preflight" \
|| exit "$?"

inRegion="$(${progDir}/region-from-zone "${inLocation}")" \
|| exit "$?"

aws ec2 describe-instance-type-offerings \
    --output=text \
    --region="${inRegion}" \
    --location-type=availability-zone \
    --filters=Name=location,Values="${inLocation}" \
    --filters=Name=instance-type,Values="${instanceType}" \
|| exit "$?"

# Stuff goes here!
echo '### Stuff goes here!'
exit 1
